{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/api/index.ts"],"names":[],"mappings":";;AAGA,yBAAyB;AACzB,+BAAwB;AAExB,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC,IAAI,OAAO,GAAW,MAAM,CAAC,QAAQ,CAAC;AACtC,IAAI,OAAO,GAAW,EAAE,CAAC;AACzB,IAAI,OAAO,GAAW,EAAE,CAAC;AACzB,IAAI,OAAO,GAAW,EAAE,CAAC;AAEzB,MAAM,WAAW,GAAG,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACpE,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAM;IAC3B,OAAO,CAAC,GAAG,CAAC,0CAA0C,GAAG,MAAM,CAAC,mBAAmB,GAAG,4CAA4C,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACxJ,OAAO,CAAC,GAAG,CAAC,kHAAkH,CAAC,CAAC;AAEpI,CAAC,CAAC,CAAC;AAEH,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC;IACnD,KAAK,EAAE,WAAW;CACrB,CAAC,CAAC;AAGH,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAY;IAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE;IACnB,OAAO,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC;QACvC,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACjB,CAAC,CAAC;IAEH,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAC1B,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAE1B,aAAG,CAAC,WAAW,EAAE,CAAC;IAClB,aAAG,CAAC,QAAQ,EAAE,CAAC;AACnB,CAAC,CAAC,CAAC","sourcesContent":["// This file is required to integrate the Syscoin API service\n// Loads the syscoin.conf file and exports the rpcuser/pass & syscoinClient\n\nimport * as fs from 'fs';\nimport Api from './api';\n\nconst config = require('./config');\nconst syscoin = require('syscoin');\n\nlet rpchost: string = config.rpc_host;\nlet rpcuser: string = '';\nlet rpcpass: string = '';\nlet rpcport: string = '';\n\nconst inputStream = fs.createReadStream(config.syscoin_config_path);\ninputStream.on('error', (e: any) => {\n    console.log('Error reading syscoin.conf specified at ' + config.syscoin_config_path + ' falling back to defaults. Exact error is:' + JSON.stringify(e));\n    console.log('syscoin.conf must be present, with rpcuser, rpcpassword, and rpcport set in order to run the Syscoin API Server.');\n    //TODO: Prevent API starting when syscoin.conf can't be found.\n});\n\nconst lineReader = require('readline').createInterface({\n    input: inputStream\n});\n\n//read syscoin.conf for login creds, if it doesn't exist use defaults.\nlineReader.on('line', (line: string) => {\n    if (line.indexOf('rpcuser') != -1) {\n        rpcuser = line.substr(line.indexOf('=') + 1);\n    }\n\n    if (line.indexOf('rpcpassword') != -1) {\n        rpcpass = line.substr(line.indexOf('=') + 1);\n    }\n\n    if (line.indexOf('rpcport') != -1) {\n        rpcport = line.substr(line.indexOf('=') + 1);\n    }\n});\n\nlineReader.on('close', () => {\n    exports.syscoinClient = new syscoin.Client({\n        host: rpchost,\n        port: rpcport,\n        user: rpcuser,\n        pass: rpcpass,\n        timeout: 30000\n    });\n\n    exports.rpcuser = rpcuser;\n    exports.rpcpass = rpcpass;\n\n    Api.initSwagger();\n    Api.initHttp();\n});\n"]}