{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import {BrowserWindow, Menu, ipcMain} from 'electron';\nimport Wallet from './wallet/wallet';\n\nrequire('electron-debug')({showDevTools: true});\n\n/**\n * Main\n */\nexport default class Main {\n    static mainWindow: Electron.BrowserWindow;\n    static application: Electron.App;\n    static BrowserWindow: any;\n    static Wallet: any;\n    static killedWallet: boolean = false;\n    static debug: boolean = false;\n\n    /**\n     * onWindowAllClosed\n     */\n    private static onWindowAllClosed() {\n        if (process.platform !== 'darwin') {\n            Main.application.quit();\n        }\n    }\n\n    /**\n     * onClose\n     */\n    private static onClose(e: any) {\n        if (Main.killedWallet === true) {\n            Main.mainWindow = null;\n        } else {\n            if (process.platform == 'darwin') {\n                e.preventDefault();\n                Main.mainWindow.hide();\n            } else {\n                Main.mainWindow = null;\n            }\n        }\n    }\n\n    /**\n     * onActivate\n     */\n    private static onActivate() {\n        Main.mainWindow.show();\n    }\n\n    /**\n     * onReady\n     */\n    private static onReady() {\n        Main.application.commandLine.appendSwitch('disable-web-security');\n        Main.mainWindow = new Main.BrowserWindow({\n            minWidth: 800,\n            minHeight: 600,\n            width: 1000,\n            height: 600,\n            'web-preferences': {\n                'web-security': false\n            },\n            show: false\n        });\n        Main.mainWindow.loadURL('file://' + __dirname + '/index.html');\n        Main.mainWindow.on('close', Main.onClose);\n        Main.mainWindow.on('ready-to-show', () => {\n            Main.mainWindow.show();\n            Main.mainWindow.focus();\n        });\n\n        ipcMain.on('relaunchBM', () => {\n            Main.application.relaunch();\n            Main.application.quit();\n        });\n\n        ipcMain.on('quitBM', () => {\n            Main.application.quit();\n        });\n\n        Main.createMenu();\n    }\n\n    /**\n     * createMenu\n     */\n    static createMenu() {\n        let menuTemplate: Electron.MenuItemConstructorOptions[] = [];\n\n        menuTemplate.push({\n            label: 'Edit',\n            submenu: [\n                {role: 'undo'},\n                {role: 'redo'},\n                {type: 'separator'},\n                {role: 'cut'},\n                {role: 'copy'},\n                {role: 'paste'},\n                {role: 'delete'},\n                {role: 'selectall'}\n            ]\n        });\n\n        if (Main.debug) {\n            menuTemplate.push({\n                label: 'Tools',\n                submenu: [\n                    {\n                        label: 'Open devTools',\n                        click () {\n                            Main.mainWindow.webContents.openDevTools();\n                        }\n                    }, {\n                        label: 'Close devTools',\n                        click () {\n                            Main.mainWindow.webContents.closeDevTools();\n                        }\n                    }\n                ]\n            });\n        }\n\n        menuTemplate.push({\n            label: 'About',\n            submenu: [\n                {\n                    label: 'Syscoin website',\n                    click () {\n                        require('electron').shell.openExternal('http://www.syscoin.org');\n                    }\n                }, {\n                    label: 'Blockchain Foundry website',\n                    click () {\n                        require('electron').shell.openExternal('http://www.blockchainfoundry.co');\n                    }\n                }\n            ]\n        });\n\n\n        if (process.platform === 'darwin') {\n            menuTemplate.unshift({\n                    label: Main.application.getName(),\n                    submenu: [\n                        {role: 'about'},\n                        {type: 'separator'},\n                        {role: 'quit'}\n                    ]\n                }\n            );\n        }\n\n        const menu = Menu.buildFromTemplate(menuTemplate);\n        Menu.setApplicationMenu(menu);\n    }\n\n    /**\n     * Main\n     *\n     * @param app\n     * @param browserWindow\n     * @param options\n     */\n    static\n    main(app: Electron.App, browserWindow: typeof BrowserWindow, options: any) {\n        Main.debug = options.debug || false;\n        Main.Wallet = new Wallet(app);\n        Main.Wallet.start(Main.debug);\n\n        Main.BrowserWindow = browserWindow;\n        Main.application = app;\n        Main.application.on('window-all-closed', Main.onWindowAllClosed);\n        Main.application.on('activate', Main.onActivate);\n        Main.application.on('ready', Main.onReady);\n        Main.application.on('before-quit', (event) => {\n            if (!Main.killedWallet)\n                event.preventDefault();\n\n            // Trigger the wallet.stop method, and pass application.quit() in the callback.\n            Main.Wallet.stop(() => {\n                Main.killedWallet = true;\n                Main.application.quit();\n            });\n        });\n    }\n}\n"]}