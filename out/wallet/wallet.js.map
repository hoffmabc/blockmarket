{"version":3,"file":"wallet.js","sourceRoot":"","sources":["../../src/wallet/wallet.ts"],"names":[],"mappings":"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","sourcesContent":["import {spawn} from 'child_process';\nconst process = require('process');\nconst path = require('path');\nconst isDev = require('electron-is-dev');\n\n/**\n * Wallet\n */\nexport default class Wallet {\n    private application: Electron.App;\n    private appPath: string;\n    private isWin32: boolean;\n    private isWin64: boolean;\n    private isDarwin: boolean;\n    private syscoind: string = '';\n    private syscoinCli: string = '';\n    private blockmarketConfigPath: string = '';\n    private blockmarketConfig: any;\n    private syscoinConfigPath: string = '';\n\n    /**\n     * constructor\n     *\n     * Setup all Wallet class settings\n     *\n     * @param app\n     */\n    constructor(app: Electron.App) {\n        this.application = app;\n        this.appPath = isDev ? path.join(__dirname, '..') : app.getAppPath();\n\n        this.blockmarketConfigPath = path.join(app.getPath('appData'), app.getName(), 'Blockmarket.json');\n        this.blockmarketConfig = require(this.blockmarketConfigPath);\n        this.syscoinConfigPath = this.blockmarketConfig.server.syscoin_config_path;\n\n        this.isWin64 = process.arch === 'x64' || process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n        this.isWin32 = process.platform === 'win32' && !this.isWin64;\n        this.isDarwin = process.platform === 'darwin';\n\n        if (this.isDarwin) {\n            this.syscoind = path.join(this.appPath, '..', 'bin', 'darwin', 'syscoind');\n            this.syscoinCli = path.join(this.appPath, '..', 'bin', 'darwin', 'syscoin-cli');\n        } else if (this.isWin32) {\n            this.syscoind = path.join(this.appPath, '..', 'bin', 'win32', 'syscoind.exe');\n            this.syscoinCli = path.join(this.appPath, '..', 'bin', 'win32', 'syscoin-cli.exe');\n        } else if (this.isWin64) {\n            this.syscoind = path.join(this.appPath, '..', 'bin', 'win64', 'syscoind.exe');\n            this.syscoinCli = path.join(this.appPath, '..', 'bin', 'win64', 'syscoin-cli.exe');\n        }\n    }\n\n    /**\n     * start\n     *\n     * Start the syscoind daemon\n     */\n    public start(debug: boolean = false) {\n        if (this.syscoind !== '') {\n            const args = [\n                '-conf=' + this.syscoinConfigPath\n            ];\n            if (debug) {\n                args.push('-debug');\n            }\n            spawn(this.syscoind, args, {detached: true});\n        }\n    }\n\n    /**\n     * stop\n     *\n     * Try top stop the syscoind daemon and call the callback once the syscoin-cli process closes\n     *\n     * @param callback\n     */\n    public stop(callback: Function) {\n        if (this.syscoinCli !== '') {\n            const args = [\n                '-conf=' + this.syscoinConfigPath,\n                'stop'\n            ];\n            const syscoinCliProcess = spawn(this.syscoinCli, args);\n            syscoinCliProcess.on('close', () => {\n                callback();\n            });\n        }\n    }\n}\n"]}